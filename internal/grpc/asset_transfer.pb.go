// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: asset_transfer.proto

package sig_graph_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignatureCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Secret    string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignatureCandidate) Reset() {
	*x = SignatureCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureCandidate) ProtoMessage() {}

func (x *SignatureCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureCandidate.ProtoReflect.Descriptor instead.
func (*SignatureCandidate) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureCandidate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SignatureCandidate) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *SignatureCandidate) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SecretId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThisId      string `protobuf:"bytes,1,opt,name=this_id,json=thisId,proto3" json:"this_id,omitempty"`
	ThisSecret  string `protobuf:"bytes,2,opt,name=this_secret,json=thisSecret,proto3" json:"this_secret,omitempty"`
	OtherId     string `protobuf:"bytes,3,opt,name=other_id,json=otherId,proto3" json:"other_id,omitempty"`
	OtherSecret string `protobuf:"bytes,4,opt,name=other_secret,json=otherSecret,proto3" json:"other_secret,omitempty"`
}

func (x *SecretId) Reset() {
	*x = SecretId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretId) ProtoMessage() {}

func (x *SecretId) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretId.ProtoReflect.Descriptor instead.
func (*SecretId) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *SecretId) GetThisId() string {
	if x != nil {
		return x.ThisId
	}
	return ""
}

func (x *SecretId) GetThisSecret() string {
	if x != nil {
		return x.ThisSecret
	}
	return ""
}

func (x *SecretId) GetOtherId() string {
	if x != nil {
		return x.OtherId
	}
	return ""
}

func (x *SecretId) GetOtherSecret() string {
	if x != nil {
		return x.OtherSecret
	}
	return ""
}

type RequestToAcceptAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeMs            uint64                `protobuf:"varint,1,opt,name=time_ms,json=timeMs,proto3" json:"time_ms,omitempty"`
	AssetId           string                `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	OwnerPublicKey    string                `protobuf:"bytes,3,opt,name=owner_public_key,json=ownerPublicKey,proto3" json:"owner_public_key,omitempty"`
	NewOwnerPublicKey string                `protobuf:"bytes,4,opt,name=new_owner_public_key,json=newOwnerPublicKey,proto3" json:"new_owner_public_key,omitempty"`
	Candidates        []*SignatureCandidate `protobuf:"bytes,5,rep,name=candidates,proto3" json:"candidates,omitempty"`
	SecretIds         map[string]*SecretId  `protobuf:"bytes,6,rep,name=secret_ids,json=secretIds,proto3" json:"secret_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RequestToAcceptAssetRequest) Reset() {
	*x = RequestToAcceptAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestToAcceptAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestToAcceptAssetRequest) ProtoMessage() {}

func (x *RequestToAcceptAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestToAcceptAssetRequest.ProtoReflect.Descriptor instead.
func (*RequestToAcceptAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *RequestToAcceptAssetRequest) GetTimeMs() uint64 {
	if x != nil {
		return x.TimeMs
	}
	return 0
}

func (x *RequestToAcceptAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *RequestToAcceptAssetRequest) GetOwnerPublicKey() string {
	if x != nil {
		return x.OwnerPublicKey
	}
	return ""
}

func (x *RequestToAcceptAssetRequest) GetNewOwnerPublicKey() string {
	if x != nil {
		return x.NewOwnerPublicKey
	}
	return ""
}

func (x *RequestToAcceptAssetRequest) GetCandidates() []*SignatureCandidate {
	if x != nil {
		return x.Candidates
	}
	return nil
}

func (x *RequestToAcceptAssetRequest) GetSecretIds() map[string]*SecretId {
	if x != nil {
		return x.SecretIds
	}
	return nil
}

type RequestToAcceptAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AckId string `protobuf:"bytes,2,opt,name=ack_id,json=ackId,proto3" json:"ack_id,omitempty"`
}

func (x *RequestToAcceptAssetResponse) Reset() {
	*x = RequestToAcceptAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestToAcceptAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestToAcceptAssetResponse) ProtoMessage() {}

func (x *RequestToAcceptAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestToAcceptAssetResponse.ProtoReflect.Descriptor instead.
func (*RequestToAcceptAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *RequestToAcceptAssetResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RequestToAcceptAssetResponse) GetAckId() string {
	if x != nil {
		return x.AckId
	}
	return ""
}

type AcceptAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckId      string              `protobuf:"bytes,1,opt,name=ack_id,json=ackId,proto3" json:"ack_id,omitempty"`
	Accepted   bool                `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	SelectedId *SignatureCandidate `protobuf:"bytes,3,opt,name=selected_id,json=selectedId,proto3" json:"selected_id,omitempty"`
}

func (x *AcceptAssetRequest) Reset() {
	*x = AcceptAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAssetRequest) ProtoMessage() {}

func (x *AcceptAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAssetRequest.ProtoReflect.Descriptor instead.
func (*AcceptAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptAssetRequest) GetAckId() string {
	if x != nil {
		return x.AckId
	}
	return ""
}

func (x *AcceptAssetRequest) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *AcceptAssetRequest) GetSelectedId() *SignatureCandidate {
	if x != nil {
		return x.SelectedId
	}
	return nil
}

type AcceptAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptAssetResponse) Reset() {
	*x = AcceptAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_transfer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAssetResponse) ProtoMessage() {}

func (x *AcceptAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_transfer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAssetResponse.ProtoReflect.Descriptor instead.
func (*AcceptAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_transfer_proto_rawDescGZIP(), []int{5}
}

var File_asset_transfer_proto protoreflect.FileDescriptor

var file_asset_transfer_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x68, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x68, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x73, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x69, 0x67, 0x5f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x69,
	0x67, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x1a, 0x56, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x1c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x67, 0x5f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x8c,
	0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x64, 0x22, 0x15, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xde, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x73, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2b,
	0x2e, 0x73, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x69,
	0x67, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x69, 0x67,
	0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x73, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x73, 0x69, 0x67, 0x5f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_asset_transfer_proto_rawDescOnce sync.Once
	file_asset_transfer_proto_rawDescData = file_asset_transfer_proto_rawDesc
)

func file_asset_transfer_proto_rawDescGZIP() []byte {
	file_asset_transfer_proto_rawDescOnce.Do(func() {
		file_asset_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_asset_transfer_proto_rawDescData)
	})
	return file_asset_transfer_proto_rawDescData
}

var file_asset_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_asset_transfer_proto_goTypes = []interface{}{
	(*SignatureCandidate)(nil),           // 0: sig_graph_grpc.SignatureCandidate
	(*SecretId)(nil),                     // 1: sig_graph_grpc.SecretId
	(*RequestToAcceptAssetRequest)(nil),  // 2: sig_graph_grpc.RequestToAcceptAssetRequest
	(*RequestToAcceptAssetResponse)(nil), // 3: sig_graph_grpc.RequestToAcceptAssetResponse
	(*AcceptAssetRequest)(nil),           // 4: sig_graph_grpc.AcceptAssetRequest
	(*AcceptAssetResponse)(nil),          // 5: sig_graph_grpc.AcceptAssetResponse
	nil,                                  // 6: sig_graph_grpc.RequestToAcceptAssetRequest.SecretIdsEntry
	(*Error)(nil),                        // 7: sig_graph_grpc.Error
}
var file_asset_transfer_proto_depIdxs = []int32{
	0, // 0: sig_graph_grpc.RequestToAcceptAssetRequest.candidates:type_name -> sig_graph_grpc.SignatureCandidate
	6, // 1: sig_graph_grpc.RequestToAcceptAssetRequest.secret_ids:type_name -> sig_graph_grpc.RequestToAcceptAssetRequest.SecretIdsEntry
	7, // 2: sig_graph_grpc.RequestToAcceptAssetResponse.error:type_name -> sig_graph_grpc.Error
	0, // 3: sig_graph_grpc.AcceptAssetRequest.selected_id:type_name -> sig_graph_grpc.SignatureCandidate
	1, // 4: sig_graph_grpc.RequestToAcceptAssetRequest.SecretIdsEntry.value:type_name -> sig_graph_grpc.SecretId
	2, // 5: sig_graph_grpc.TransferAsset.RequestToAcceptAsset:input_type -> sig_graph_grpc.RequestToAcceptAssetRequest
	4, // 6: sig_graph_grpc.TransferAsset.AcceptAsset:input_type -> sig_graph_grpc.AcceptAssetRequest
	3, // 7: sig_graph_grpc.TransferAsset.RequestToAcceptAsset:output_type -> sig_graph_grpc.RequestToAcceptAssetResponse
	5, // 8: sig_graph_grpc.TransferAsset.AcceptAsset:output_type -> sig_graph_grpc.AcceptAssetResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_asset_transfer_proto_init() }
func file_asset_transfer_proto_init() {
	if File_asset_transfer_proto != nil {
		return
	}
	file_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_asset_transfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_transfer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_transfer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestToAcceptAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_transfer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestToAcceptAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_transfer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_transfer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_asset_transfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_asset_transfer_proto_goTypes,
		DependencyIndexes: file_asset_transfer_proto_depIdxs,
		MessageInfos:      file_asset_transfer_proto_msgTypes,
	}.Build()
	File_asset_transfer_proto = out.File
	file_asset_transfer_proto_rawDesc = nil
	file_asset_transfer_proto_goTypes = nil
	file_asset_transfer_proto_depIdxs = nil
}
